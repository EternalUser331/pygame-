от  случайного  импорта  randint
импорт  пигмей
Pygame . init ()
Pygame . время . set_timer ( pygame . USEREVENT , 2000 ) # раз в 2 сек
W  =  400
H  =  400
БЕЛЫЙ  = ( 255 , 255 , 255 )
 
sc  =  pygame . дисплей . set_mode (( W , H ))
CARS = ( 'ded.png' , 'ded.png' ) # список изображений
CARS_SURF = []
 
Pygame . смеситель . музыка . загрузить ( 'Nooo.mp3' )
Pygame . смеситель . музыка . играть ()
 
sound1  =  pygame . смеситель . музыка . нагрузка ( '1.mp3' )
 
для  меня  в  диапазоне ( лен ( автомобили )):
    CARS_SURF . append ( pygame . image . load ( CARS [ i ]). convert ()) # добавление изображения
 
Класс  автомобиль ( Pygame . спрайт . Спрайт ): # класс машины
    def  __init__ ( self , x , surf , группа ):
        Pygame . спрайт . Спрайт . __init__ ( самостоятельно )
        сам . изображение  =  прибой
        сам . прямоугольник  =  сам . изображение . get_rect ( center = ( x , W ))
        сам . добавить ( группа )
        сам . скорость = ( randint ( 1 , 5 ))
        сам . изображение . set_colorkey (( 255 , 255 , 255 )) # добавил
    Защита  обновление ( самостоятельно ): # обновления / изменяет св-в класс за его пределы
        если  сам . Rect . у  >  - 100 :
            сам . Rect . у  - =  себя . скорость
        еще :
            сам . убийство
 
автомобили  =  Pygame . спрайт . Group () #
Car ( randint ( 25 , W - 25 ), CARS_SURF [ 0 ], автомобили ) # создание первой машины - спрайта
 
класс  Car_up ( pygame . sprite . Sprite ): # класс машин едущих навстречу
    def  __init__ ( self , x , surf ):
        Pygame . спрайт . Спрайт . __init__ ( самостоятельно )
        сам . изображение  =  прибой
        сам . прямоугольник  =  сам . изображение . get_rect ( center = ( x , 50 ))
        сам . изображение . set_colorkey (( 255 , 255 , 255 ))
 
car_up = Car_up ( 200 , CARS_SURF [ 1 ]) # создание спрайта-машины едущей навстречу
sc . Blit ( car_up . изображение , car_up . Прямоугольник ) #
 
пока  1 :
    = Pygame . событие . получить ()
    для  я  в  :
        если  я . Тип ==  Пигмей . USEREVENT : #        
            Car ( randint ( 25 , W - 25 ), CARS_SURF [ 0 ], автомобили ) # создание новой машины
 
    ключи  =  Pygame . ключ . get_pressed () # отслеживает
    если  ключи [ pygame . K_RIGHT ]: # вправо движение
        car_up . Rect . х + = 2
    элиф  ключи [ пигмей . K_LEFT ]: # влево движение
        car_up . Rect . х - = 2
 
    если  Pygame . спрайт . spritecollide ( car_up , cars , False ): # если было соприкосновение одного с кем-то из группы то
        Pygame . смеситель . музыка . нагрузка ( '1.mp3' )
        Pygame . смеситель . музыка . играть ()
        Pygame . время . delay ( 4000 ) # задаем время после которого следует закрыть окно
        # умножать на 1000 нужно т.к. длина возвращается в секундах а не миллисекундах
        Pygame . quit () # то выход
 
    sc . заполнить ( БЕЛЫЙ ) #
    автомобили . draw ( sc ) # отрисовать поверхности-ть
    sc . Blit ( car_up . изображение , car_up . Rect ) # отрисовать поверх-ть
    Pygame . дисплей . update () # обновить
    Pygame . время . задержка ( 20 )
    автомобили . update () # обновить класс машин
